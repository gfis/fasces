#!perl

# hapy_empty - generate blocks for empty pyramid
# @(#) $Id$
# 2025-08-08, Georg Fischer
#:#
#:# Usage:
#:#   perl hapy_empty.pl [-d debug] > hapyramid_blocks.js
#:#       -d 0=none, 1=some, 2=more debuging output
#:#       -m max. edge length (default 22)
#----------------
use strict;
use warnings;
use integer;
my ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday) = gmtime (time);
my $utc_stamp = sprintf ("%04d-%02d-%02dT%02d:%02d", $year + 1900, $mon + 1, $mday, $hour, $min);

my $debug = 0;
my $max_edge = 22;
while (scalar(@ARGV) > 0 and ($ARGV[0] =~ m{\A[\-\+]})) {
    my $opt = shift(@ARGV);
    if (0) {
    } elsif ($opt  =~ m{d}) {
        $debug     = shift(@ARGV);
    } elsif ($opt  =~ m{e}) {
        $max_edge  = shift(@ARGV);
    } else {
        die "invalid option \"$opt\"\n";
    }
} # while $opt
#----
print <<"GFis";
/**
  hapyramid_blocks.js - coordinates of the cubes for the Hadamard pyramid
  \@(#) \$Id\$
  Generated by hapy_empty.pl at $utc_stamp
*/
var vec_pyramid =
//  aazzxxyy aa=opacity 0..15
GFis

my $dist = $max_edge;
my $sep = "[";
my $incr = 0;
for (my $el = 2; $el <= $max_edge; $el += 2) {
  print "\n  "; # start next plane on a new line
  $incr ++;
  my $y = -$el + $max_edge;
  for (my $row = 0; $row < $el; $row ++) {
    my $x = - $incr + $row + $dist;
    for (my $col = 0; $col < $el; $col ++) {
      my $z = - $incr + $col + $dist;
      my $opac = ($x + $z) % 16;
      my $block  =  $opac * 1000000 + $z * 10000 + $x * 100 + $y;
      print "$sep" . sprintf("%8d", $block);
      $sep = ",";
    } # for $col
  } # for $row
} # for $el
print <<"GFis";

  ];
GFis
#--------
__DATA__
/**
  hapyramid_blocks.js - coordinates of the cubes for the Hadamard pyramid
	@(#) $Id$
	2025-08-08: Georg Fischer
*/  
var displ  = 50;
var vec_pyramid = 
//   aazzxxyy   aazzxxyy   aazzxxyy   aazzxxyy,  aa=opacity 0..15
	[              1515151,   1515051
	,              1505151,  15505051
	,   2494950,   2495050,   2495150,   2495250
	,   2504950,   2505050,   2505150,   2505250
	,   2514950,   2515050,   2515150,   2515250
	,   2524950,   2525050,   2525150,   2525250
	];
