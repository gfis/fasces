====Rule 1====
This degenerate rule is inserted for completeness only. It puts the root segment in the "attached" state.
====Rule 2====
For this rule, all source rows indexes are contained in the target rows indexes. 

We look more closely at the first of these chains of coincidences: row 3 is attached to the root, row 11 to row 3, 43 to 11 and so on. In the end, the trees corresponding to all rows of the form ''(4<sup>k</sup> + 2) / 6, k &gt;= 0'' (OEIS A007583, with left sides 4, 16, 64, 256 ...) are ''stacked'' on the root segment (row 1). All involved segments are different, and because of the uniqueness of the attachment positions, we have built one tree above the root segment.

 3  7 11 15 19 23 27 31 35 39 43 47 51 55 59 63 67 71 75 ... source rows
 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... target rows
 ^-----v                  
       ^-----------------------v  1  3 11 43  ...              
    ^--------------v                        
                   ^------- 2  7 27 107 ... (10 * 4<sup>k</sup> + 2) / 6 = OEIS A136412
                                            
          ^---------------- 4 15 59  ...    (22 * 4<sup>k</sup> + 2) / 6 = OEIS A199210     
             ^------------- 5 19 75  ...    (28 * 4<sup>k</sup> + 2) / 6 = OEIS A206373     
                ^---------- 6 23 91  ...    (34 * 4<sup>k</sup> + 2) / 6  
                                            
                      ^---- 8 31 123 ...    (46 * 4<sup>k</sup> + 2) / 6 

Likewise, all trees for rows of the form ''(10 * 4<sup>k</sup> + 2) / 6'' are stacked on segment 2. The general formula for the rows stacked on row ''4 * i + 3'' is ''((6 * i - 2) * 4<sup>k</sup> + 2) / 6, k &gt;= 0''.

As a preliminary result, we have all source rows 3, 7, 11, 15 ... attached somewhere, and we have built bigger trees above all remaining segments ''i &#x2261; 0, 1, 2 mod 4'' (2, 4, 5, 6, 8, 9, 10, 12 ..., OEIS A004773).

====Rule 3====
 5  9 13 17 21 25 29 33 37 41 45 49 53 57 61 65 69 73 77 80 ... source rows
 4  7 10 13 16 19 22 25 28 31 34 37 40 43 46 49 52 55 58 61 ... target rows
   ~~          ~~          ~~          ~~          ~~           already attached by rule 2
Source rows of the form ''16 * k + 1'' coincide with target rows for this rule, and for ''k = 4, 16, 64, ... 4^m'', the length of the chains increases:
 17->13=>10
 33->25=>19
 49->37=>28
 65->49=>37=>28
 81->61=>46
 ...
The target of every fourth source row was already attached by rule 2. After the application of rules 2 and 3, we have attached all odd source rows.
====Rule 4====
This is similiar to rule 3. Chains occurs for source rows ''64 * k + 26'', and the lengths of the chains increases for ''k = 6, 38, ... 32^m + 6''.
====Rule 5====
This is the first rule which moves upwards.
